package ccos.devops.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PointageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPointageAllPropertiesEquals(Pointage expected, Pointage actual) {
        assertPointageAutoGeneratedPropertiesEquals(expected, actual);
        assertPointageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPointageAllUpdatablePropertiesEquals(Pointage expected, Pointage actual) {
        assertPointageUpdatableFieldsEquals(expected, actual);
        assertPointageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPointageAutoGeneratedPropertiesEquals(Pointage expected, Pointage actual) {
        assertThat(expected)
            .as("Verify Pointage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPointageUpdatableFieldsEquals(Pointage expected, Pointage actual) {
        assertThat(expected)
            .as("Verify Pointage relevant properties")
            .satisfies(e -> assertThat(e.getDatuDuJour()).as("check datuDuJour").isEqualTo(actual.getDatuDuJour()))
            .satisfies(e -> assertThat(e.getHeureArrive()).as("check heureArrive").isEqualTo(actual.getHeureArrive()))
            .satisfies(e -> assertThat(e.getHeureDepart()).as("check heureDepart").isEqualTo(actual.getHeureDepart()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPointageUpdatableRelationshipsEquals(Pointage expected, Pointage actual) {
        assertThat(expected)
            .as("Verify Pointage relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
